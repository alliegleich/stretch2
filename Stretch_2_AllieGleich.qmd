---
title: "Data Science for Public Policy"
subtitle: "Stretch Assignment 7"
author: "Allie Gleich"
execute:
  warning: false
format:
  html:
    embed-resources: true
---

1. Set Up

The data for this model is taken from the 2022 Current Population Survey. Describe the data here. I will be using this model to predict household income based on how many years the subject has been in the United States. I expect to see that for immigrants, average household income increases the longer they have been in the country. The target variable is household based on years since immigration (YRIMMIG). The prediction is that the models will reveal how an immigrant's livelihood may improve as time in America increases.

```{r}
#Load packages

library(tidyverse)
library(ipumsr)
library(srvyr)
library(haven)
library(ggplot2)
library(tune)
library(lubridate)
library(tidymodels)
library(patchwork)
library(stringr)
library(dplyr)
library(themis)
library(parsnip)
library(rsample)
library(yardstick)
library(vip)
library(kknn)
library(caret)
```

```{r}
#Load in the CPS 2022 data from IPUMS
ddi <- read_ipums_ddi("cps_00004_ddi.xml")
cps <- read_ipums_micro(ddi)

glimpse(cps)

glimpse(cps$YRIMMIG)

cps <- subset(cps, select = -YEAR)

cps <- subset(cps, select = -HHINTYPE)

#clean names with janitor

cps <- cps %>%
  janitor::clean_names()

colnames(cps) <- tolower(colnames(cps))

cps <- cps[!is.na(cps$hhincome) & cps$hhincome != 0, ]


cps <- cps[!is.na(cps$yrimmig) & cps$yrimmig != 0, ]

```



```{r}
#Split data into training and testing data

set.seed(20231125)
split <- initial_split(data = cps, strata = "yrimmig", prop = 0.8)


cps_train <- training(x = split)
cps_test <- testing(x = split)


```



```{r}
#Use data viz and other skills to perform exploratory data analysis on training data

#Find how income compares for groups who immigrants before or after 2000

mean(cps_train$hhincome, na.rm = TRUE)

mean(cps_train$hhincome[cps_train$yrimmig > 2000], na.rm = TRUE)

mean(cps_train$hhincome[cps_train$yrimmig < 2000], na.rm = TRUE)

# Visualize how years in the U.S. impacts income

cps_train_viz <- cps_train %>%
  filter(yrimmig > 1920) %>%
  group_by(yrimmig, hhincome) %>%
  summarise(frequency = n()) %>%
  ggplot(aes(x = yrimmig, y = hhincome, size = frequency)) + geom_point() + theme_classic() + labs(

    title = "Years Since Immigration's Impact on Household Income ",

    x = "Years Since Immigration",

    y = "Household Income",

    caption = "Data from the Community Population Survey")


print(cps_train_viz)
```

My error selected term is the Root Mean Square Error (RMSE). An error in my model would incorrectly portray the hardships of new U.S. immigrants and potentially under estimate the increases in income immigrants may experience overtime. Because this is more of an investigative model and does not directly impact one's well being, I would say an error under 15% is acceptable. A false positive would be more costly because it would underplay the struggles of U.S. immigrants. An over prediction on income may falsely show some politicians that immigrants do not need any welfare assistance. An under prediction would just show the issue is worse and would not detrimental negative impacts.


2.  Come up with Models

```{r}
# Create a recipe for the models. Here the predictor is year since immigration (yrimmig) to predict household income (hhincome).

cps_rec <- 
  recipe(hhincome ~ ., data = cps_train) %>%
  step_dummy(all_nominal_predictors()) %>% 
  step_zv(all_numeric_predictors()) %>%
  step_center(all_numeric_predictors()) %>%
  step_zv(all_predictors()) %>%
  step_log(hhincome, base = 10)
  

bake(prep(cps_rec, training = cps_train), new_data = cps_train)
     
     
```


```{r}
# Set up v-fold cross validation with 10 folds to test the model further down

set.seed(12032023)
folds <- vfold_cv(data = cps_train, v = 10)
folds

```


```{r}
#First model: Linear Regression Model to predict household income based on immigration year.

lm_mod <- linear_reg() %>%
  set_engine("lm")


# create a workflow
lm_wf <- workflow() %>%
  add_recipe(cps_rec) %>%
  add_model(lm_mod) 

# fit the model by piping your workflow
lm_cv <- lm_wf %>%
  fit_resamples(resamples = folds)


# select the best model based on the "rmse" metric
lm_best <- lm_cv %>%
  select_best(metric = "rmse")


# use the finalize_workflow() function with your workflow and the best model 
# to update (or "finalize") your workflow by modifying the line below
lm_final <- finalize_workflow(
  lm_wf,
  parameters = lm_best
)

```

```{r}
    
#Second model: Decision Tree Model to predict household income based on immigration year.

library(broom)

#create the model
cps_tree_mod <- decision_tree() %>% 
  set_engine("rpart") %>% 
  set_mode(mode = "regression")


# create a workflow
cps_tree_wf <- workflow() %>%
  add_recipe(cps_rec) %>%
  add_model(cps_tree_mod) 


#fit the model
cps_tree_fit <- cps_tree_wf %>%
  fit(data = cps_train)

# resample equation
get_tree_coefs <- function(x) {
  
  x %>% 
extract_fit_engine() %>% 
tidy()
  }

tree_tidy_ctrl <- control_grid(extract = get_tree_coefs, save_pred = TRUE)

# fit refolds of model
tree_cv <- cps_tree_wf %>%
  fit_resamples(resamples = folds, control = tree_tidy_ctrl, metrics = metric_set(rmse))
```

```{r}

#Third model: KNN to predict household income based on immigration year.

# create the model
 knn_mod <-
  nearest_neighbor(neighbors = tune()) %>%
  set_engine(engine = "kknn") %>%
  set_mode(mode = "regression")

# create a workflow
 knn_wf <-
 workflow() %>%
 add_recipe(cps_rec) %>%
 add_model(knn_mod) 
 
#create a tuning grid
 knn_grid <- grid_regular(neighbors(range = c(1, 20)), levels = 10)
  

# estimate models with resampling for each row of the tuning grid
knn_res <-
  knn_wf %>%
  tune_grid(resamples = folds,
  grid = knn_grid,
  control = control_grid(save_pred = TRUE),
  metrics = metric_set(rmse))
```

3.  Estimation

```{r}
#Calculate metrics

knn_rsme_avg <- collect_metrics(knn_res,summarize = FALSE) %>% 
  print()


knn_rsme_avg_figure <- knn_rsme_avg %>%
  summarise(mean_estimate = mean(.estimate))


knn_res %>%
  collect_metrics(knn_res, summarize = FALSE) %>% 
  print()
```


```{r}
# Out of sample error

knn_res %>% show_best()

knn_best <- knn_res %>%
  select_best("rmse")

#finalize workflow
knn_final_wf <- 
  knn_wf %>% 
  finalize_workflow(knn_best)

#final fit 
knn_final_fit <- 
  knn_final_wf %>%
  last_fit(split)

# RSME or Out of sample error rate
knn_final_fit %>%
  collect_metrics(knn_final, summarize = FALSE) %>% 
  print()

#collect predictions & show testing data predictions
predictions <- 
  knn_final_fit %>% 
  collect_predictions()

```


4.  Interpretation

a. The KNN model above has an RMSE of 0.411. This error metric represents how often the model strays from the actual values in the CPS dataset when predicting household income. This is a large RMSE and indicates that the model is not a great fit for the data. This may be the case because KNN is usually a better predictor when it comes to smaller datasets. My dataset may have been too large for this type of supervised machine learning to be successful. In the context of my specific study, on predicting income based on year of immigration, the model could have major implications if policymakers were using this as a guide to set policy. The model inaccurately portrays the income of immigrants and therefore, would skew any policy decisions based around immigrant welfare benefits, etc. 

b. To better my model I would focus on a linear regression model because I believe the relationship between years in the U.S. and income is linear in a positive direction. I could also try to model the data using cluster analysis to predict household income. The clusters would take into account other variables, such as education level, state/region, etc. to better predict income. Another addition I would make to my model is creating "household income bands" to group incomes into ranges. That will simplify the model and make it easier to predict. This would not impact the goal of the study because I am just looking to draw general conclusions on immigrant household income. Lastly, in my model I originally included data from people who immigrated from 1920 to present day. I should consider changing my lower bound year to 1960 to ensure that I am not accounting for elderly and retired persons, whose income would be low or 0. 

